---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always


matrix:
  fast_finish: true
  include:

# TESTED OK
    - name: "deploy minikube helm kubernetes-cli latest w chocolatey Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
        - choco install minikube
        - minikube version
        - choco install kubernetes-helm
        - helm version   
        - choco install kubernetes-cli
        - kubectl version --client #Test to ensure the version you installed is up-to-date          
      after_success:
        - deactivate

# TESTED OK
    - name: "deploy minikube helm latest w chocolatey Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
        - choco install minikube
        - choco install kubernetes-helm
        - minikube version
        - helm version     
      after_success:
        - deactivate

# https://www.powershellgallery.com/
# https://kubernetes.io/docs/tasks/tools/install-kubectl/
    - name: "deploy with Powershell from PSGallery Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
        - choco install curl 
        # Run the installation commands (making sure to specify a DownloadLocation)
        - Install-Module -Name install-kubectl -Scope CurrentUser -Force
        - Get-Command install-kubectl # verify
        - gcm install-kubectl # or shorter version verify
        - Install-Script -Name 'install-kubectl' -Scope CurrentUser -Force
        # If you do not specify a DownloadLocation, kubectl will be installed in the user's temp Directory.
        # The installer creates $HOME/.kube and instructs it to create a config file
        # - install-kubectl.ps1 [-DownloadLocation <path>]
        # - kubectl version --client
      after_success:
        - deactivate

# https://kubernetes.io/docs/tasks/tools/install-kubectl/
    - name: "deploy kubectl binary with curl Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
        # - choco install curl #curl - curl v7.70.0 already installed
        # find out the latest stable version (for example, for scripting),
        # https://storage.googleapis.com/kubernetes-release/release/stable.txt
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.19.0/bin/windows/amd64/kubectl.exe
        # Add the binary in to your PATH
        # - kubectl version --client
      after_success:
        - deactivate

# https://scoop.sh/
# https://kubernetes.io/docs/tasks/tools/install-kubectl/
    - name: "deploy kubectl latest w scoop Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
      # change the execution policy (i.e. enable Powershell) with
        - set #see all currently defined environment variables 
        - set USERPROFILE #query the value of %USERPROFILE%
        - net user # displays all user accounts on a local machine
        # - echo Set-ExecutionPolicy RemoteSigned -scope CurrentUser #when debugging a command
        - Set-ExecutionPolicy RemoteSigned -scope CurrentUser 
      # Make sure PowerShell 5 (or later, include PowerShell Core) and .NET Framework 4.5 (or later) are installed.
        - Invoke-Expression (New-Object System.Net.WebClient).DownloadString('https://get.scoop.sh')
        # - iwr -useb get.scoop.sh | iex # or shorter
        - scoop install kubectl
        - kubectl version --client #Test to ensure the version you installed is up-to-date
        # If you're using cmd.exe, run: cd %USERPROFILE%
        - echo %USERPROFILE%
        # - dir
        # - cd ~
        # - mkdir .kube #Create the .kube directory
        # - cd .kube #Change to the .kube directory
        # -Configure kubectl to use a remote Kubernetes cluster
        # Edit the config file with a text editor of your choice, such as Notepad
        # - New-Item config -type file
        # - dir        
      after_success:
        - deactivate

# https://kubernetes.io/docs/tasks/tools/install-kubectl/
    - name: "deploy kubectl latest w chocolatey Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
        - choco install kubernetes-cli #Chocolatey package manager
        - kubectl version --client
        # If you're using cmd.exe, run: cd %USERPROFILE%
        - echo %USERPROFILE%
        - dir
        - cd ~
        - mkdir .kube #Create the .kube directory
        - cd .kube #Change to the .kube directory
        # -Configure kubectl to use a remote Kubernetes cluster
        # Edit the config file with a text editor of your choice, such as Notepad
        - ps New-Item config -type file #new-item is a powershell command 
        - dir
      after_success:
        - deactivate

# TESTED OK
    - name: "deploy minikube latest w chocolatey Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
        - choco install minikube
        - minikube version
      after_success:
        - deactivate

    - name: "deploy minikube latest wo chocolatey Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python
        - python --version
      script:
        - $output = "minikube-installer.exe"
        - $url = "https://storage.googleapis.com/minikube/releases/latest/minikube-installer.exe"
        - Invoke-WebRequest -Uri $url -OutFile $output
        - minikube version
      after_success:
        - deactivate